<h1>CCHDO System Guide</h1>
<ul>
	<li><a href="#database_tables">Database</a></li>
	<li><a href="#dynamic_pages">Dynamic Pages</a></li>
	<li><a href="#static_pages">Static Pages</a></li>
	<li><a href="#system_scripts">System Scripts</a></li>
</ul>

<h2 id="database_tables">Database Tables</h2>
<ul>
	<li>Meta data</li>
	   <table><tr>
		<td><div id="cruises_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'cruises'} %>
		    </div>
			<div id="cruises_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'cruises'} %>
			    </div>
		</td><td>cruises</td></tr></table>
	<div id='cruises' style="display:none;">
	<ul>
		<li>id int(11)</li>
		<li>ExpoCode text</li>
		<li>Line text</li>
		<li>Country text</li>
		<li>Chief_Scientist text</li>
		<li>Begin_Date date</li>
		<li>EndDate date</li>
		<li>Ship_Name text</li>
		<li>Alias text</li>
		<li>Group text</li>
	</ul>
         </div>	
	   <table><tr>
		<td><div id="documents_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'documents'} %>
		    </div>
			<div id="documents_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'documents'} %>
			    </div>
		</td><td>documents</td></tr></table>
	     <div id='documents' style="display:none;">
	       <ul>
		    <li>Size</li>
		    <li>FileType</li>
		    <li>FileName</li>
		    <li>ExpoCode</li>
		    <li>Files</li>
		    <li>LastModified</li>
		    <li>Modified</li>
		    <li>Stamp</li>
		    <li>id</li>
		   </ul>	
	     </div>	
	   <table><tr>
		<td><div id="events_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'events'} %>
		    </div>
			<div id="events_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'events'} %>
			    </div>
		</td><td>events</td></tr></table>
	     <div id='events' style="display:none;">
	      	<ul>
			    <li>ID</li>
			    <li>ExpoCode</li>
			    <li>First_Name</li>
			    <li>LastName</li>
			    <li>Data_Type</li>
			    <li>LastModified</li>
			    <li>Action</li>
			    <li>Date_Entered</li>
			    <li>Summary</li>
			    <li>Note</li>
			   </ul>
	     </div>	
	   <table><tr>
		<td><div id="parameters_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameters'} %>
		    </div>
			<div id="parameters_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameters'} %>
			    </div>
		</td><td>parameters</td></tr></table>
	     <div id='parameters' style="display:none;">
	     		<ul>
				    <li>ID</li>
				    <li>ExpoCode</li>
                    <li>Parameter Code</li>
                    <li>Parameter_PI</li>
                    <li>Parameter Date</li>
				   </ul>
	     </div>	
	   <table><tr>
		<td><div id="parameter_descriptions_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameter_descriptions'} %>
		    </div>
			<div id="parameter_descriptions_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameter_descriptions'} %>
			    </div>
		</td><td>parameter_descriptions</td></tr></table>
	     <div id='parameter_descriptions' style="display:none;">
	     	
				<ul>
				    <li>ID</li>
				    <li>Parameter</li>
				    <li>FullName</li>
				    <li>Description</li>
				    <li>Units</li>
				    <li>Range</li>
				    <li>Alias</li>
				    <li>Group</li>
				    <li>Unit_mneumonic</li>
				   </ul>
	     </div>	
	   <table><tr>
		<td><div id="parameter_groups_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameter_groups'} %>
		    </div>
			<div id="parameter_groups_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameter_groups'} %>
			    </div>
		</td><td>parameter_groups</td></tr></table>
	     <div id='parameter_groups' style="display:none;">
	     		<ul>
				    <li>ID</li>
				    <li>Group</li>
				    <li>Parameters</li>
			    <ul>
				   <li>CTD:	CTDOXY,CTDPRS,CTDRAW,CTDSAL,CTDTMP</li>
				   <li>BOT:	SALNTY,OXYGEN,THETA</li>
				   <li>NUTs:	SILCAT,NITRAT,NITRIT,PHSPHT,NO2+NO3</li>
				   <li>CFCs:	CFC-11,CFC-12,CFC113,CCL4</li>
				   <li>CARBON:	TCARBN,ALKALI,PCO2,PH,POC,DOC,PCO2TMP,PHTEMP,TOC</li>
				   <li>Tr/He/Ne:	HELIUM,NEON,DELHE4,TRITUM,DELHE3</li>
				   <li>Radio Carbons:	DELC14,DELC13</li>
				</ul>
			   </ul>
	     </div>	
	
		<table><tr>
		<td><div id="codes_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'codes'} %>
		    </div>
			<div id="codes_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'codes'} %>
			    </div>
		</td><td>codes</td></tr></table>
	     <div id='codes' style="display:none;">
				<ul>
				    <li>Code</li>
				    <li>Status</li>
				<ul>
					<li>1 - OnLine</li>
					<li>2 - Reformatted</li>
					<li>3 - Submitted</li>
					<li>4 - NotMeasured</li>
					<li>5 - Proposed</li>
					<li>6 - No Information</li>
				</ul>
			   </ul>				
	     </div>
	
	
	   <table><tr>
		<td><div id="contacts_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contacts'} %>
		    </div>
			<div id="contacts_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contacts'} %>
			    </div>
		</td><td>contacts</td></tr></table>
	     <div id='contacts' style="display:none;">
	     	
				<ul>
				    <li>ID</li>
				    <li>LastName</li>
				    <li>FirstName</li>
				    <li>Institute</li>
				    <li>Address</li>
				    <li>telephone</li>
				    <li>fax</li>
				    <li>email</li>
				   </ul>
	     </div>	
	   
	   <table><tr>
		<td><div id="tracks_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'tracks'} %>
		    </div>
			<div id="tracks_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'tracks'} %>
			    </div>
		</td><td>tracks</td></tr></table>
	     <div id='tracks' style="display:none;">
	     	
				<ul>
				    <li>ID</li>
				    <li>ExpoCode</li>
				    <li>FileName</li>
				    <li>Basin</li>
				    <li>Track</li>
				   </ul>
	     </div>	
	   <br>
	
	<li>Staff and Site Data</li>
		<table><tr>
		<td><div id="assignments_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'assignments'} %>
		    </div>
			<div id="assignments_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'assignments'} %>
			    </div>
		</td><td>assignments</td></tr></table>
	     <div id='assignments' style="display:none;">

				<ul>
				    <li>ID</li>
				    <li>ExpoCode</li>
				    <li>project</li>
				    <li>current_status</li>
				    <li>cchdo_contact</li>
				    <li>data_contact</li>
				    <li>action</li>
				    <li>parameter</li>
				    <li>history</li>
				    <li>changed</li>
				    <li>notes</li>
				    <li>priority</li>
				    <li>deadline</li>
				    <li>manager</li>
				    <li>complete</li>
				   </ul>
	     </div>
		<table><tr>
		<td><div id="submissions_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'submissions'} %>
		    </div>
			<div id="submissions_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'submissions'} %>
			    </div>
		</td><td>submissions</td></tr></table>
	     <div id='submissions' style="display:none;">

				<ul>
				    <li>ID</li>
				    <li>name</li>
				    <li>institute</li>
				    <li>Country</li>
				    <li>email</li>
				    <li>public</li>
				    <li>ExpoCode</li>
				    <li>Ship_Name</li>
				    <li>Line</li>
				    <li>cruise_date</li>
				    <li>action</li>
				    <li>notes</li>
				    <li>file</li>
				    <li>assigned</li>
				    <li>assimilated</li>
				   </ul>
	     </div>
		
		<table><tr>
		<td><div id="users_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'users'} %>
		    </div>
			<div id="users_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'users'} %>
			    </div>
		</td><td>users</td></tr></table>
	     <div id='users' style="display:none;">

				<ul>
				    <li>ID</li>
				    <li>username</li>
				    <li>password_salt</li>
				    <li>password_hash</li>
				   </ul>
	     </div>
		<table><tr>
		<td><div id="sessions_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'sessions'} %>
		    </div>
			<div id="sessions_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'sessions'} %>
			    </div>
		</td><td>sessions</td></tr></table>
	     <div id='sessions' style="display:none;">

				<ul>
				    <li>ID</li>
				    <li>session_id</li>
				    <li>data</li>
				    <li>updated_at</li>
				   </ul>
	     </div>
		<table><tr>
		<td><div id="schema_info_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'schema_info'} %>
		    </div>
			<div id="schema_info_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'schema_info'} %>
			    </div>
		</td><td>schema_info</td></tr></table>
	     <div id='schema_info' style="display:none;">

				<ul>
				    <li>version</li>
				   </ul>
	     </div>
</ul>
<h2 id="dynamic_pages">Dynamic Pages</h2>
<ul>
	<li><h3>Public</h3></li>
    <table><tr>
	<td>
	<div id="data_access_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access'} %>
	    </div>
		<div id="data_access_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access'} %>
		    </div>
	</td><td>Data Access (data_access_controller.rb)</td></tr></table>
     <div id='data_access' style="display:none;">
       <p>
			   If the page is accessed with an ExpoCode argument then the data_access_controller.rb script prepares the cruise and file information to be displayed on the show_cruise.rhtml page.      If no ExpoCode is given then the form.rhtml page is displayed, allowing search by parameter.  The form.rhtml page also allows query by file modification date.
		<br>Views:<br>
		<ul>
		<li>show_cruise.rhtml: Show an individual cruise, with files</li>
		<li>form.rhtml: Search for cruises</li>
		<li>list_cruises.rhtml: Cruise list returned when form.rhtml is submitted</li>
		<li>list_files.rhtml: File list returned when form.rhtml is submitted for modified files.</li>
		<li>countries_for_lookup.rhtml: List of countries accessed by autocompletetion javascript function on form.rhtml.</li>
		<li>expocodes_for_lookup.rhtml: List of ExpoCodes accessed by autocompletetion javascript function on form.rhtml.</li>
		<li>pis_for_lookup.rhtml: List of PIs accessed by autocompletetion javascript function on form.rhtml.</li>
		<li>ships_for_lookup.rhtml: List of ships accessed by autocompletetion javascript function on form.rhtml.</li>
		</ul>
		Methods:<br>
		<ul>
		   <table><tr><td>
			  <div id="data_access_index_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_index'} %>
			  </div>
			  <div id="data_access_index_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_index'} %>
			  </div>
			 </td>
			 <td>index</td>
			</tr></table>
			<div id="data_access_index" style="display:none;">
			  	Checks for arguments.  If an ExpoCode argument is present the show_cruise method is called.  If the argument is a search from the form.rhtml page, the search type is checked.
			    If the search is for a cruise the list_cruises action is called, if the search is for modified files the list_files method is called.
			</div>
		   
		   	      <table><tr><td>
				  <div id="data_access_show_cruise_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_show_cruise'} %>
				  </div>
				  <div id="data_access_show_cruise_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_show_cruise'} %>
				  </div>
				  </td>
				  <td>show_cruise</td>
			      </tr></table>
				  <div id="data_access_show_cruise" style="display:none;">
				  	The corresponding row is retrieved from the cruises table by matching the ExpoCode argument.  The file info is then retrieved from the documents table,
				   also by ExpoCode.  A hash is filled with file locations which are used as links on the show_cruise.rhtml page.
				  </div>
		   
		   	      <table><tr><td>
				  <div id="data_access_list_cruises_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_list_cruises'} %>
				  </div>
				  <div id="data_access_list_cruises_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_list_cruises'} %>
				  </div>
				  </td>
				  <td>list_cruises</td>
			      </tr></table>
				  <div id="data_access_list_cruises" style="display:none;">
                    A sql query is built using the information gathered from form.rhtml.  The query is used to obtain a list of matching rows from the cruises table.  
                   A hash of hashes is built, using the ExpoCode of each cruise as the  first key, and file types as the second key.  
                   In this way the list_cruises.rhtml page displays each cruise from the query, along with it’s file information.
				  </div>		  
				 
		   	      <table><tr><td>
				  <div id="data_access_list_files_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_list_files'} %>
				  </div>
				  <div id="data_access_list_files_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_list_files'} %>
				  </div>
				  </td>
				  <td>list_files</td>
			      </tr></table>
				  <div id="data_access_list_files" style="display:none;">
                    Using the file type and date arguments from the form.rhtml page, the list_files method produces a hash of hashes which contains file information for each cruise.  
                   The hash of hashes is sorted by the earliest modification date of any file for each cruise.  This data structure is then passed on for display in the list_files view.
				  </div>

		   	      <table><tr><td>
				  <div id="data_access_date_sort_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_date_sort'} %>
				  </div>
				  <div id="data_access_date_sort_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_access_date_sort'} %>
				  </div>
				  </td>
				  <td>date_sort</td>
			      </tr></table>
				  <div id="data_access_date_sort" style="display:none;">
                    method that helps sort the hash of hashes produced in the list_files method.
				  </div>
		   <li>pis_for_lookup</li>
		   <li>expocodes_for_lookup</li>
		   <li>ships_for_lookup</li>
		   <li>countries_for_lookup</li>
		</ul>

	   </p>
     </div>



	<table><tr>
	<td>
	<div id="search_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'search'} %>
	    </div>
		<div id="search_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'search'} %>
		    </div>
	</td><td>Search (search_controller.rb)</td></tr></table>
     <div id='search' style="display:none;">
       <p>   The search controller matches a query against each column of the cruises table.  The match which produces the largest result is used, and the results
	     are displayed through the index.rhtml template.<br>
	   Views:
	   <ul>
		<li>index.rhtml</li>
	   </ul>
	   Methods:
	    <ul>
		  <li>index</li>
		</ul>
	   </p>
     </div>


	<table><tr>
	<td>
	<div id="data_history_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_history'} %>
	    </div>
		<div id="data_history_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_history'} %>
		    </div>
	</td><td>Data Histories (data_history_controller.rb)</td></tr></table>
     <div id='data_history' style="display:none;">
       <p>
			  Data history entries are gathered by ExpoCode from the events table and displayed on the history.rhtml page.  Accompanying event notes are displayed with the _note.rhtml page by using an AJAX driven page update triggered by pressing the note link next to the event.<br>
		Views:
		<ul>
		<li>history.rhtml</li>
		<li>_note.rhtml</li>
        </ul>
        Methods:
        <ul>
	      	<table><tr><td>
			  <div id="data_history_index_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_history_index'} %>
			  </div>
			  <div id="data_history_index_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_history_index'} %>
			  </div>
			  </td>
			  <td>index</td>
		      </tr></table>
			  <div id="data_history_index" style="display:none;">
                  Checks that the controller was passed an ExpoCode argument.  If not, redirect the browser to data_access_controller.rb.  
                  When an ExpoCode is passed, the history method is called.			  
              </div>

		  	<table><tr><td>
			  <div id="data_history_history_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_history_history'} %>
			  </div>
			  <div id="data_history_history_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_history_history'} %>
			  </div>
			  </td>
			  <td>history</td>
		      </tr></table>
			  <div id="data_history_history" style="display:none;">
                  Requires an ExpoCode argument.  Also checks for arguments specifiying the type of sort, and whether or not to display a note.  
                The events table is queried based on the ExpoCode and sort type.  If a note is requested, it is retrieved by ID.  
                Events are stored in an array which is displayed by history.rhtml.
              </div>
		</ul>
	   </p>
     </div>


	<table><tr>
	<td>
	<div id="table_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'table'} %>
	    </div>
		<div id="table_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'table'} %>
		    </div>
	</td><td>Tables (table_controller.rb)</td></tr></table>
     <div id='table' style="display:none;">
       <p>	The table controller expects to be passed an argument which describes a cruise group.  The cruise database is searched for any cruises whose group column 
		 matches.  The parameter table is then searched for each returned cruise.  Basic cruise info and parameter status are then displayed through the index.html template.
		 <br>
         Views:
		 <ul>
			<li>index.html</li>
		</ul>
		Methods:
		 <ul>
			<table><tr><td>
			  <div id="table_index_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'table_index'} %>
			  </div>
			  <div id="table_index_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'table_index'} %>
			  </div>
			  </td>
			  <td>index</td>
		      </tr></table>
			  <div id="table_index" style="display:none;">
                  The index method first checks for a group argument, if found the cruises table is searched for rows with a matching group column. 
                 If none is found the group defaults to Atlantic Onetime.   After obtaining an array of cruise rows a hash of hashes is built which provides
                  a status for each parameter group for each cruise.  The documents table is also queried to see if the cruise documentation is online.  		  
              </div>
		 </ul>
	   </p>
     </div>


	<table><tr>
	<td>
	<div id="bulk_search_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search'} %>
	    </div>
		<div id="bulk_search_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search'} %>
		    </div>
	</td><td>Bulk Search (search_cart_controller.rb)</td></tr></table>
     <div id='bulk_search' style="display:none;">
       <p>The search cart application is meant to mimic the behavior of a shopping cart.  Individual files are added to the user’s ‘cart’, which can be downloaded as a single zip file.<br>
	    Views:
	    <ul>
		  <li>_found.rhtml</li>
		  <li>clear_files.rjs</li>
		  <li>find.rhtml</li>
		  <li>update_files.rjs</li>
		</ul>
		Methods:
		<ul>
	    <table><tr><td>
		    <div id="bulk_search_index_arrow_up">
		       <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_index'} %>
		    </div>
			<div id="bulk_search_index_arrow_down" style="display:none">
			    <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_index'} %>
			</div>
			</td>
			<td>index</td>
		    </tr></table>
		  <div id="bulk_search_index" style="display:none;">
            Empty method that causes index.rhtml to be rendered.
		  </div>
		
		<table><tr><td>
		    <div id="bulk_search_search_db_arrow_up">
		       <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_search_db'} %>
		    </div>
			<div id="bulk_search_search_db_arrow_down" style="display:none">
			    <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_search_db'} %>
			</div>
			</td>
			<td>search_db</td>
		    </tr></table>
		  <div id="bulk_search_search_db" style="display:none;">
            Given arguments from the form on the index page, the search_db method builds a sql query based on those arguments.  
           Once a list of cruises is produced from this query, a hash of hashes describing the file state of each cruise is created.  
           This hash is passed to the _found.rhtml partial.
		  </div>
	
		  <table><tr><td>
		    <div id="bulk_search_update_files_arrow_up">
		       <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_update_files'} %>
		    </div>
			<div id="bulk_search_update_files_arrow_down" style="display:none">
			    <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_update_files'} %>
			</div>
			</td>
			<td>update_files</td>
		    </tr></table>
		  <div id="bulk_search_update_files" style="display:none;">
            Executes the update_files.rjs javascript, which updates the “cart” to contain any filenames that the user has checked.
		  </div>
		  
		
		
		  <table><tr><td>
		    <div id="bulk_search_submit_files_arrow_up">
		       <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_submit_files'} %>
		    </div>
			<div id="bulk_search_submit_files_arrow_down" style="display:none">
			    <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_submit_files'} %>
			</div>
			</td>
			<td>submit_files</td>
		    </tr></table>
		  <div id="bulk_search_submit_files" style="display:none;">
            Builds a zip file from all files within the cart.  This zip file is then sent to the user.
		  </div>
		  
		  <table><tr><td>
		    <div id="bulk_search_clear_files_arrow_up">
		       <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_clear_files'} %>
		    </div>
			<div id="bulk_search_clear_files_arrow_down" style="display:none">
			    <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'bulk_search_clear_files'} %>
			</div>
			</td>
			<td>clear_files</td>
		    </tr></table>
		  <div id="bulk_search_clear_files" style="display:none;">
            Empty function that causes clear_files.rjs to be rendered.  clear_files.rjs clears the cart and unchecks all of the boxes of the form.
		  </div>
	    </ul>
	   </p>
     </div>


	<table><tr>
	<td>
	<div id="submit_controller_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'submit_controller'} %>
	</div>
    <div id="submit_controller_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'submit_controller'} %>
	</div>
	</td><td>submit (submit_controller.rb)</td></tr></table>
     <div id='submit_controller' style="display:none;">
       <p>The submit_controller.rb script prepares a submission object which will be placed in the submissions table.  The object is filled with values obtained from the form in index.rhtml.  Once the submission file has been obtained a receipt page, save_file.rhtml, is shown.  The line upload_status_for :save_file is a call to the upload_progress module.<br>
	   Views:
	   <ul>
	     <li>index.rhtml</li>
	     <li>save_file.rhtml</li>
	   </ul>
	   Methods:
	   <ul>
		 <li>index - empty, place holder for calling the index.rhtml view.</li>
		
		 	<table><tr><td>
			  <div id="submit_save_file_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'submit_save_file'} %>
			  </div>
			  <div id="submit_save_file_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'submit_save_file'} %>
			  </div>
			  </td>
			  <td>save_file</td>
		      </tr></table>
			  <div id="submit_save_file" style="display:none;">
First we check for a file uploaded from the form on the index page.  If a file was received, write it to the system.  Next we create a new Submission object based on the form input.  If the new submission object is saved properly the save_file.rhtml page is displayed.  A confirmation email is also sent out using the file_submitted model.  If the submission fails to save, the user is redirected to the form on index.rhtml.           
              </div>

	   </ul>
	   </p>
     </div>


	<table><tr>
	<td>
	<div id="contact_controller_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contact_controller'} %>
	</div>
    <div id="contact_controller_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contact_controller'} %>
	</div>
	</td><td>Contacts Page (contact_controller.rb)</td></tr></table>
     <div id='contact_controller' style="display:none;">
       <p>
	    Information from the contacts table is displayed through show_contact.rhtml.  Contacts are found by last name.  <br>
	    Views:
	    <ul>
		  <li>show_contact.rhtml</li>
		</ul>
		Methods:
		<ul>
		  	<table><tr><td>
			  <div id="contact_index_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contact_index'} %>
			  </div>
			  <div id="contact_index_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contact_index'} %>
			  </div>
			  </td>
			  <td>index</td>
		      </tr></table>
			  <div id="contact_index" style="display:none;">
                  Checks for a contact argument.  If found, the show_contact method is called, if not, the user is redirected to the home page.		  
              </div>

		  	<table><tr><td>
			  <div id="contact_show_contact_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contact_show_contact'} %>
			  </div>
			  <div id="contact_show_contact_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'contact_show_contact'} %>
			  </div>
			  </td>
			  <td>show_contact</td>
		      </tr></table>
			  <div id="contact_show_contact" style="display:none;">
                  Contact info is retrieved from the contacts table.  The cruises table is then queried for rows which have the current contact as chief scientist.  		  
              </div>
		</ul>
	   </p>
     </div>


	<table><tr>
	<td>
	<div id="map_search_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search'} %>
	    </div>
		<div id="map_search_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search'} %>
		    </div>
	</td><td>Map Search (map_search_controller.rb)</td></tr></table>
     <div id='map_search' style="display:none;">
       <p>
          The map search app uses the google maps api to display cruise tracks.  The search method is the same as the main search function.  
         Results are obtained from the cruise table and the tracks table.  The map_search controller uses the map_search layout, so that the google
         api id is included in the javascript(app/views/layouts/map_search.rhtml)<br>
        Views:
        <ul>
	      <li>index.rhtml</li>
	      <li>update_map.rjs</li>
	    </ul>
	    Methods:
	    <ul>
		  	 	<table><tr><td>
				  <div id="map_search_index_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_index'} %>
				  </div>
				  <div id="map_search_index_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_index'} %>
				  </div>
				  </td>
				  <td>index</td>
			      </tr></table>
				  <div id="map_search_index" style="display:none;">
	                    Calls get_tracks and renders the index.rhtml page 
	              </div>
	
		  	 	<table><tr><td>
				  <div id="map_search_update_map_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_update_map'} %>
				  </div>
				  <div id="map_search_update_map_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_update_map'} %>
				  </div>
				  </td>
				  <td>update_map</td>
			      </tr></table>
				  <div id="map_search_update_map" style="display:none;">
	                    The search form on index.rhtml calls update_map.  The search algorthm is the same as the main search app, except that it also associates cruise tracks with 
	                 the ExpoCode keyed hash of hashes.  When finished populating a hash of hashes describing cruises, the update_map.rjs script is rendered, 
	                 which uses the google maps api to plot the cruises.  The script also rewrites the table of cruise descriptions.
	              </div>
	
	
		  	 	<table><tr><td>
				  <div id="map_search_line_sort_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_line_sort'} %>
				  </div>
				  <div id="map_search_line_sort_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_line_sort'} %>
				  </div>
				  </td>
				  <td>line_sort</td>
			      </tr></table>
				  <div id="map_search_line_sort" style="display:none;">
	                    Sorts line number numerically, alphabetically, and by repeat vs. onetime.
	              </div>
	

		  	 	<table><tr><td>
				  <div id="map_search_get_tracks_arrow_up">
				        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_get_tracks'} %>
				  </div>
				  <div id="map_search_get_tracks_arrow_down" style="display:none">
					        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'map_search_get_tracks'} %>
				  </div>
				  </td>
				  <td>get_tracks</td>
			      </tr></table>
				  <div id="map_search_get_tracks" style="display:none;">
	                    Builds a hash of hashes describing cruise tracks by ExpoCode.  It expects an ocean basin as an argument.
	              </div>
		</ul>
	   </p>
     </div>

	<table><tr>
	<td>
	<div id="rss_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'rss'} %>
	    </div>
		<div id="rss_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'rss'} %>
		    </div>
	</td><td>rss (cruise_news_controller.rb)</td></tr></table>
     <div id='rss' style="display:none;">
       <p>
          The cruise_news controller generates an rss feed based on the 100 most recently changed files<br>
        Views:
        <ul>
	      <li>index.rhtml</li>
	      <li>update_map.rjs</li>
	    </ul>
	    Methods:
	    <ul>
		  	<table><tr><td>
			  <div id="rss_update_map_arrow_up">
			        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'rss_update_map'} %>
			  </div>
			  <div id="rss_update_map_arrow_down" style="display:none">
				        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'rss_update_map'} %>
			  </div>
			  </td>
			  <td>recent_changes</td>
		      </tr></table>
			  <div id="rss_update_map" style="display:none;">
                  First the documents table is queried for the 150 most recently changed files.  A hash of hashes is created with ExpoCodes as the primary index.
                For each ExpoCode the hash also stores a string of changed files, a line number, and the date the files were changed.  		  
              </div>
		</ul>
	   </p>
     </div>

	<table><tr><td>
	  <div id="parameter_descriptions_controller_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameter_descriptions_controller'} %>
	  </div>
	  <div id="parameter_descriptions_controller_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'parameter_descriptions_controller'} %>
	  </div>
	</td><td>Parameter Descriptions (parameter_descriptions_controller.rb)</td></tr></table>
    <div id='parameter_descriptions_controller' style="display:none;">
       <p>
         The parameter description controller dumps the content of the parameter_descriptions table<br>
        Views:
        <ul>
	      <li>index.rhtml</li>
	    </ul>
	    Methods:
	    <ul>
		  <li>index: One line -   @parameters = ParameterDescriptions.find(:all) </li>
		</ul>
	   </p>
    </div>


 <li><h3>Staff</h3></li>
	
	<table><tr><td>
	  <div id="task_manager_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager'} %>
	  </div>
	  <div id="task_manager_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager'} %>
	  </div>
	</td><td>Task Manager (task_manger_controller.rb)</td></tr></table>
    <div id='task_manager' style="display:none;">
	   <p>  The CCHDO task manager is designed to allow users to receive and track assignments.</p>
	   Views:
	   <ul>
		<li>_assignments.rhtml</li>
		<li>_new_assignments.rhtm</li>
		<li>_past_due.rhtml</li>
		<li>index.rhtml</li>
	   </ul>
	   Methods:
	   <ul>
		<li>check_authentication</li>
		<li>signin</li>
		<li>signout</li>
		<table><tr><td>
		  <div id="task_manager_index_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_index'} %>
		  </div>
		  <div id="task_manager_index_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_index'} %>
		  </div>
		  </td>
		  <td>index</td>
	      </tr></table>
		  <div id="task_manager_index" style="display:none;">
              Saves the current user as a global variable and renders the index.rhtml partial.
          </div>

		<table><tr><td>
		  <div id="task_manager_search_assignments_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_search_assignments'} %>
		  </div>
		  <div id="task_manager_search_assignments_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_search_assignments'} %>
		  </div>
		  </td>
		  <td>search_assignments</td>
	      </tr></table>
		  <div id="task_manager_search_assignments" style="display:none;">
              This method does double duty.  First it saves any changes made to any tasks.  If there was a query, the task list is searched by each column, and the largest 
             task list is returned.  When finished, the _assignments partial is rendered.
          </div>

		<table><tr><td>
		  <div id="task_manager_csv_dump_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_csv_dump'} %>
		  </div>
		  <div id="task_manager_csv_dump_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_csv_dump'} %>
		  </div>
		  </td>
		  <td>csv_dump</td>
	      </tr></table>
		  <div id="task_manager_csv_dump" style="display:none;">
              This function requires ruby's csv module.  It Builds a comma-seperated-value file from the currently listed tasks.  This file is then sent to the 
             user using the send_data rails function.
          </div>

		<table><tr><td>
		  <div id="task_manager_past_due_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_past_due'} %>
		  </div>
		  <div id="task_manager_past_due_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_past_due'} %>
		  </div>
		  </td>
		  <td>past_due</td>
	      </tr></table>
		  <div id="task_manager_past_due" style="display:none;">
              This method is called from the _assignments.rhtml partial.  Past due assignments are always listed, regardless of the query.
          </div>

		<table><tr><td>
		  <div id="task_manager_create_arrow_up">
		        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_create'} %>
		  </div>
		  <div id="task_manager_create_arrow_down" style="display:none">
			        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'task_manager_create'} %>
		  </div>
		  </td>
		  <td>create</td>
	      </tr></table>
		  <div id="task_manager_create" style="display:none;">
             Creates a new task in the tasks table, based on data collected from the _new_assignment.rhtml partial.  After saving the new task, the _assignments partial
            is rendered.
          </div>
	   </ul>
    </div>

	<table><tr><td>
	  <div id="data_entry_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_entry'} %>
	  </div>
	  <div id="data_entry_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'data_entry'} %>
	  </div>
	</td><td>data_entry</td></tr></table>
    <div id='data_entry' style="display:none;">
	    Views:
	    <ul>
		  <li>_contact_entry.rhtml</li>
		  <li>_cruise_entry.rhtml</li>
		  <li>_cruise.rhtm</li>
		  <li>_display_events.rhtml</li>
		  <li>_event_entry.rhtml</li>
		  <li>_event_names.rhtml</li>
		  <li>_note.rhtml</li>
		  <li>_parameter_entry.rhtml</li>
		  <li>cruise_entry.rhtml</li>
		  <li>index.rhtml</li>
		  <li>update_parameter.rjs</li>
		</ul>
		Methods:
		<ul>
	   	  <li>check_authentication</li>
	   	  <li>signin</li>
	   	  <li>signout</li>
	   	  <li>index</li>
	   	  <li>cruise_entry</li>
	   	  <li>event_entry</li>
	   	  <li>find_name</li>
	   	  <li>contact_entry</li>
	   	  <li>parameter_entry</li>
	   	  <li>submit_parameter</li>
	   	  <li>create_cruise</li>
	   	  <li>create_event</li>
	   	  <li>display_events</li>
	   	  <li>note</li>
	   	  <li>find_contact_entry</li>
	   	  <li>create_contact</li>
	   	  <li>update_parameters</li>
	     </ul>
    </div>

	<table><tr><td>
	  <div id="cruise_status_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'cruise_status'} %>
	  </div>
	  <div id="cruise_status_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'cruise_status'} %>
	  </div>
	</td><td>cruise_status</td></tr></table>
    <div id='cruise_status' style="display:none;">
	    Views:
	    <ul>
		  <li>_all_cruise_meta.rhtml</li>
		  <li>_cruise_history.rhtml</li>
		  <li>_cruise_list.rhtml</li>
		  <li>_cruise_meta.rhtml</li>
		  <li>_doc_meta.rhtml</li>
		  <li>_note.rhtml</li>
		  <li>_status_meta.rhtml</li>
		  <li>cruise_information</li>
		</ul>
		Methods:
		<ul>
		  <li>check_authentication</li>
		  <li>signin</li>
		  <li>signout</li>
		  <li>index</li>
		  <li>flag_cruises</li>
		  <li>cruise_information</li>
		  <li>note</li>
		  <li>all_cruise_meta</li>
		</ul>
    </div>

    <table><tr><td>
	  <div id="staff_controller_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'staff_controller'} %>
	  </div>
	  <div id="staff_controller_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'staff_controller'} %>
	  </div>
	</td><td>staff controller (login page, submission list)</td></tr></table>
    <div id='staff_controller' style="display:none;">
	  Views:
	    <ul>
		  <li>_assign_submission.rhtml</li>
		  <li>_assignments.rhtml</li>
		  <li>_assignments_old.rhtml</li>
		  <li>_cruise.rhtml</li>
		  <li>_found.rhtml</li>
		  <li>_new_assignment.rhtml</li>
		  <li>_past_due.rhtml</li>
		  <li>_past_due_old.rhtml</li>
		  <li>_submission_list.rhtml</li>
		  <li>_user_tasks.rhtml</li>
		  <li>contacts_for_lookup.rhtml</li>
		  <li>countries_for_lookup.rhtml</li>
		  <li>expocodes_for_lookup.rhtml</li>
		  <li>home.rhtml</li>
		  <li>pis_for_lookup.rhtml</li>
		  <li>parameters_for_lookup.rhtml</li>
		  <li>ships_for_lookup.rhtml</li>
		  <li>signin.rhtml</li>
		  <li>submissions.rhtml</li>
		  <li>update_parameters.rjs</li>
		</ul>
		Methods:
		<ul>
	   	  <li>check_authentication</li>
	   	  <li>signin</li>
	   	  <li>signout</li>
	   	  <li>index</li>
	   	  <li>create</li>
	   	  <li>cruise_entry</li>
	   	  <li>create_cruise</li>
	   	  <li>assignment_list</li>
	   	  <li>search_assignments</li>
	   	  <li>csv_dump</li>
	   	  <li>past_due</li>
	   	  <li>submissions</li>
	   	  <li>submission_list</li>
	   	  <li>assign_submission</li>
	   	  <li>home</li>
	   	  <li>update_parameters</li>
	   	  <li>pis_for_lookup</li>
	   	  <li>contacts_for_lookup</li>
	   	  <li>expocodes_for_lookup</li>
	   	  <li>ships_for_lookup</li>
	   	  <li>countries_for_lookup</li>
	   	  <li>parameters_for_lookup</li>
	    </ul>
		
    </div>

	<table><tr><td>
	  <div id="documentation_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'documentation'} %>
	  </div>
	  <div id="documentation_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'documentation'} %>
	  </div>
	</td><td>documentation</td></tr></table>
    <div id='documentation' style="display:none;">
	    Views:
	    <ul>
		  <li>index.rhtml</li>
		  <li>toggle.rjs</li>
		</ul>
		Methods:
		<ul>
		  <li>check_authentication</li>
		  <li>signin</li>
		  <li>signout</li>
		  <li>index</li>
		  <li>toggle</li>
		</ul>
    </div>

	</ul>
</ul>	
<h2 id="static_pages">Static Pages</h2>
<ul>

	<li><a href="/">index</a></li>
	<li>Basin pages - <a href="/arctic.html">arctic</a>, <a href="/atlantic.html">atlantic</a>, <a href="/pacific.html">pacific</a>, <a href="/indian.html">indian</a>, <a href="/southern.html">southern</a></li>
	<li><a href="/contact.html">contact</a></li>
	<li><a href="/abbreviations.html">abbreviations and acronyms</a></li>
	<li><a href="/format.html">format</a></li>
	<ul>
		<li><a href="/formats/exchange/index.htm">exchange format</a></li>
		<ul>
			<li><a href="/formats/exchange/exchange_format_desc.htm">exchange format description</a></li>
			<li><a href="/formats/exchange/example_hy1.htm">exchange spreadsheet example</a></li>
		</ul>
		<li><a href="/formats/netcdf/index.htm">netcdf format</a></li>
		<ul>
			<li><a href="/formats/netcdf/ctd/example_ct1.htm">example ncdump from a WHP-NetCDF CTD file</a></li>
			<li><a href="/formats/netcdf/hyd/example_hy1.htm">example ncdump from a WHP-NetCDF Bottle file</a></li>
		</ul>
		<li><a href="/formats/misc/sampsum.htm">sample sum file</a></li>
	</ul>
	<li><a href="/manuals.html">manuals</a></li>
	<li><a href="/policies.html">policies</a></li>
	<ul>
       	<li><a href="/policies/crypt.htm">file encryption</a></li>
	    <li><a href="/policies/version.html">version codes</a></li>	
	   	<li><a href="/policies/sharing.html">data sharing</a></li>
	  	<li><a href="/policies/woce_name.html">woce file name conventions</a></li>
	  	<li><a href="/policies/postwoce_name.htm">post-woce file name conventions</a></li>
	   	<li><a href="/policies/doc.htm">whp documentation policy</a></li>
	</ul>
	<li><h3>maps</h3></li>
	<ul>
		<li><a href="/maps/atl_map.htm">Entire Atlantic</a></li>
		<li><a href="/maps/atl_north.htm">North Atlantic</a></li>
		<li><a href="/maps/atl_central.htm">Central Atlantic</a></li>
		<li><a href="/maps/atl_south.htm">South Atlantic</a></li>
		<li><a href="/maps/pac_map.htm">Entire Pacific</a></li>
		<li><a href="/maps/pac_asia.htm">West Pacific</a></li>
		<li><a href="/maps/pac_aust.htm">South West Pacific</a></li>
		<li><a href="/maps/pac_amer.htm">East Pacific</a></li>
		<li><a href="/maps/ind_map.htm">Indian</a></li>
		<li><a href="/maps/sou_map.htm">Southern</a></li>
    </ul>
    <li><a href="/maps/metermap.htm">Current Meter Page</a></li>
</ul>
<h2 id="system_scripts">System Scripts</h2>
<ul>
	<table><tr><td>
	  <div id="web_update_arrow_up">
	        <%= link_to_remote image_tag('arrow-up.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'web_update'} %>
	  </div>
	  <div id="web_update_arrow_down" style="display:none">
		        <%= link_to_remote image_tag('arrow-down.gif', :size => "10x10",:border => "0"),:url => {:action => 'toggle',:id => 'web_update'} %>
	  </div>
	</td><td>web_update</td></tr></table>
    <div id='web_update' style="display:none;">
    </div>
</ul>
