#!/srv/webtools/webtools/libcchdoenv/bin/python

from __future__ import with_statement
import getopt
import sys

import libcchdo as L
import libcchdo.model.datafile
import libcchdo.formats.ctd.netcdf as ctdnc
import libcchdo.formats.ctd.netcdf_oceansites as ctdnc_oceansites


def main(argv):
    opts, args = getopt.getopt(argv[1:], 'v:h', ['version=', 'help'])

    usage = ('Usage: %s [-v|--version] <cchdo_netcdf> [timeseries name]\n'
               '\t-v|--version\tOceanSITES version number \n'
               '\t\t\t1.1\n'
               '\t\t\t1.2 (default)\n'
               '\t-h|--help\tprint out help and exit'
              ) % argv[0]

    if len(args) < 1:
        print >> sys.stderr, 'Please give a cchdo_netcdf file argument.'
        print >> sys.stderr, usage
        return 1

    version = '1.2'

    for o, a in opts:
        if o in ('-v', '--version'):
            version = a
        elif o in ('-h', '--help'):
            print >> sys.stderr, usage
            return 0
        else:
            assert False, 'unhandled option'

    if not version in ('1.1', '1.2'):
        print >> sys.stderr, usage
        return 1

    file = L.model.datafile.DataFile()
    with open(argv[1], 'r') as in_file:
        ctdnc.read(file, in_file)

    if len(argv) > 2:
        timeseries = argv[2].strip()
        if timeseries == 'BATS':
            print >> sys.stderr, 'Printing a BATS OceanSITES NetCDF'
            ctdnc_oceansites.write(file, sys.stdout, timeseries='BATS', version=version)
        elif timeseries == 'HOT':
            print >> sys.stderr, 'Printing a HOT OceanSITES NetCDF'
            ctdnc_oceansites.write(file, sys.stdout, timeseries='HOT', version=version)
    else:
        print >> sys.stderr, 'Printing an AMBIGUOUS (read: INVALID) OceanSITES NetCDF'
        ctdnc_oceansites.write(file, sys.stdout, version=version)


if __name__ == '__main__':
    sys.exit(main(sys.argv))
